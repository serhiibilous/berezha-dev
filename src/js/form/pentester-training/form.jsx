import React, { useState, useEffect } from 'react'
import { FormUserData } from '../components/form-user-data'
import { useFetch } from '../components/use-fetch'
import { PENTESTER_TRAINING_ENDPOINT } from '../constants'
import { validateForm } from '../components/validate-form'
import { Loader } from '../components/loader'
import { Success } from '../components/success'
import { Error } from '../components/error'
import {
  fullProgramPrice,
  fullProgramPriceWithSale,
  fullProgramPriceWithSaleAndStudent,
  fullProgramPriceWithSaleAndMilitaryVeteran,
  partProgramPrice,
  partProgramPriceAndStudent,
  partProgramPriceMilitaryVeteran,
} from '../constants'

export function PentesterTrainingForm() {
  const [userFirstName, setUserFirstName] = useState('')
  const [userLastName, setUserLastName] = useState('')
  const [userEmail, setUserEmail] = useState('')
  const [userPhone, setUserPhone] = useState('')
  const [userComment, setUserComment] = useState('')
  const [agreement, setAgreement] = useState('')
  const [validationErrors, setValidationErrors] = useState([])
  const [shouldValidate, setShouldValidate] = useState(false)

  const [fullProgram, setFullProgram] = useState(true)
  const [fullPaymentSale, setFullPaymentSale] = useState(true)
  const [isStudent, setIsStudent] = useState(false)
  const [isMilitaryVeteran, setIsMilitaryVeteran] = useState(false)

  const [price, setPrice] = useState(fullProgramPriceWithSale)

  const validationFields = [
    { type: 'text', name: 'FirstName', value: userFirstName },
    { type: 'email', name: 'Email', value: userEmail },
    { type: 'checkbox', name: 'agreement', value: agreement },
  ]

  const [success, error, isLoading, fetchData] = useFetch({
    url: `/formhook/${PENTESTER_TRAINING_ENDPOINT}`,
  })

  const handleSubmitForm = (event) => {
    event.preventDefault()

    const errors = validateForm(validationFields)
    setValidationErrors(errors)
    setShouldValidate(true)

    const data = {
      first_name: userFirstName,
      last_name: userLastName,
      email: userEmail,
      phone: userPhone,
      message: userComment,
      price: price,
      currency: 'UAH',
      program_type: fullPayment ? 'Full program' : 'Module 1 Only',
      discount_full_pay: fullPaymentSale,
      discount_student: isStudent,
      discount_military_veteran: militaryVeteranSale,
      pageUrl: window.location.href,
      formName: 'PentesterTraining',
    }

    if (errors.length === 0) {
      fetchData(data)
    }
  }

  const handleChangeFullProgram = () => {
    setFullProgram(!fullProgram)
  }

  const handleChangeIsStudent = () => {
    if (isMilitaryVeteran) {
      setIsMilitaryVeteran(false)
    }
    setIsStudent(!isStudent)
  }

  const handleChangeIsMilitaryVeteran = () => {
    if (isStudent) {
      setIsStudent(false)
    }
    setIsMilitaryVeteran(!isMilitaryVeteran)
  }

  useEffect(() => {
    if (fullProgram) {
      if (fullPaymentSale) {
        if (isStudent) {
          setPrice(fullProgramPriceWithSaleAndStudent)
        } else if (isMilitaryVeteran) {
          setPrice(fullProgramPriceWithSaleAndMilitaryVeteran)
        } else {
          setPrice(fullProgramPriceWithSale)
        }
      } else {
        setPrice(fullProgramPrice)
      }
    } else {
      if (isStudent) {
        setPrice(partProgramPriceAndStudent)
      } else if (isMilitaryVeteran) {
        setPrice(partProgramPriceMilitaryVeteran)
      } else {
        setPrice(partProgramPrice)
      }
    }
  }, [fullProgram, fullPaymentSale, isMilitaryVeteran, isStudent])

  useEffect(() => {
    if (shouldValidate) {
      const errors = validateForm(validationFields)
      setValidationErrors(errors)
    }
  }, [userFirstName, userEmail, agreement])

  return (
    <section className="training-price">
      <div className="container">
        <form onSubmit={handleSubmitForm} className="training-price__container">
          {!error && !success && (
            <>
              <div className="training-price__left training-price__left_security">
                <h2 className="training-price__title heading-h2">Training Price</h2>
                <>
                  <div className="training-price__radio">
                    <div className="training-price__checkbox body-text-1">
                      <input
                        type="checkbox"
                        id="fullProgramPrice"
                        name="fullProgramPrice"
                        checked={!fullProgram}
                        onChange={handleChangeFullProgram}
                      />
                      <label htmlFor="fullProgramPrice">
                        <span className="training-price__checkbox-value">
                          <span>Full Program</span>
                        </span>
                        <span className="training-price__checkbox-value">
                          <span>Module 1 Only</span>
                        </span>
                      </label>
                    </div>
                  </div>
                  <div className="training-price-content">
                    <p className="heading-h2 training-price-content__title">{price} UAH</p>
                    <p className="caption"> * VAT included</p>
                  </div>
                  <p className="body-text-2 training-price__list-title">Discounts</p>
                  <ul className="training-price__list">
                    <li className="form-check__container form-check__container_with-indent body-text-2">
                      <input
                        type="checkbox"
                        id="fullPaymentSale"
                        name="fullPaymentSale"
                        className="form-check-input"
                        checked={fullPaymentSale}
                        onChange={() => setFullPaymentSale(!fullPaymentSale)}
                        disabled={!fullProgram}
                      />
                      <label htmlFor="fullPaymentSale" className="form-check-label">
                        -2000 UAH in-full advance payment
                      </label>
                    </li>
                    <li className="form-check__container body-text-2">
                      <input
                        type="checkbox"
                        id="isStudent"
                        name="isStudent"
                        checked={isStudent}
                        onChange={handleChangeIsStudent}
                        className="form-check-input"
                      />
                      <label htmlFor="isStudent" className="form-check-label form-check-label_radio">
                        -25% for a Ukrainian daytime student
                      </label>
                    </li>
                    <li className="form-check__container body-text-2">
                      <input
                        type="checkbox"
                        id="militaryVeteranSale"
                        name="militaryVeteranSale"
                        className="form-check-input"
                        checked={isMilitaryVeteran}
                        onChange={handleChangeIsMilitaryVeteran}
                      />
                      <label htmlFor="militaryVeteranSale" className="form-check-label form-check-label_radio">
                        -40% for a Ukrainian military veteran
                      </label>
                    </li>
                  </ul>
                </>
              </div>
              <div className="training-price__right">
                <div className="training-price__form">
                  <FormUserData
                    onChangeUserFirstName={setUserFirstName}
                    onChangeUserLastName={setUserLastName}
                    onChangeUserEmail={setUserEmail}
                    onChangeUserComment={setUserComment}
                    onChangeUserPhone={setUserPhone}
                    onChangeAgreement={setAgreement}
                    errors={validationErrors}
                    isTrainingForm
                  />
                </div>
              </div>
            </>
          )}
          {isLoading && <Loader />}
          {success && <Success bgColor="#00ceba" />}
          {error && <Error />}
        </form>
      </div>
    </section>
  )
}
